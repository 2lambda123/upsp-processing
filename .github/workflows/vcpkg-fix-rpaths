#!/bin/bash

# syntax: patchelf
# [--set-interpreter FILENAME]
# [--page-size SIZE]
# [--print-interpreter]
# [--print-soname]              Prints 'DT_SONAME' entry of .dynamic section. Raises an error if DT_SONAME doesn't exist
# [--set-soname SONAME]         Sets 'DT_SONAME' entry to SONAME.
# [--set-rpath RPATH]
# [--remove-rpath]
# [--shrink-rpath]
# [--allowed-rpath-prefixes PREFIXES]           With '--shrink-rpath', reject rpath entries not starting with the allowed prefix
# [--print-rpath]
# [--force-rpath]
# [--add-needed LIBRARY]
# [--remove-needed LIBRARY]
# [--replace-needed LIBRARY NEW_LIBRARY]
# [--print-needed]
# [--no-default-lib]
# [--clear-symbol-version SYMBOL]
# [--output FILE]
# [--debug]
# [--version]
# FILENAME...


if [ ! -f "vcpkg" ]; then
    echo "ERROR: Must run from vcpkg dir"
    exit 1
fi

# Find all libs, and patch w/ correct RUNPATH
# '$ORIGIN' is special entry in RUNPATH referring to "this solib's dir",
# shorthand for the LIB_DIR. Alternatively, we could add the actual vcpkg lib dir
# but this makes the vcpkg solib's bulk-relocatable, which is kind of nice.
RUNPATH='$ORIGIN'
TRIPLET=x64-linux-dynamic

LIB_DIR=$PWD/installed/$TRIPLET/lib
FILES=( $( find $LIB_DIR -type f -name 'lib*.so*' ) )
# will break on file names with whitespace
for f in "${FILES[@]}"; do
    patchelf --set-rpath "$RUNPATH" "$f"
    echo "patchelf --set-rpath \"$RUNPATH\" \"$f\""
done

LIB_DIR=$PWD/installed/$TRIPLET/debug/lib
FILES=( $( find $LIB_DIR -type f -name 'lib*.so*' ) )
# will break on file names with whitespace
for f in "${FILES[@]}"; do
    patchelf --set-rpath "$RUNPATH" "$f"
    echo "patchelf --set-rpath \"$RUNPATH\" \"$f\""
done

